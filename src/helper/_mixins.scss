@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}
@mixin relativeCenter($direction: "horizontal") {
  position: relative;
  @if $direction == "both" {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
  @if $direction == "vertical" {
    top: 50%;
    transform: translateY(-50%);
  }
  @if $direction == "horizontal" {
    left: 50%;
    transform: translateX(-50%);
  }
}
@mixin absoluteCenter($direction: "horizontal") {
  position: absolute;
  @if $direction == "both" {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
  @if $direction == "vertical" {
    top: 50%;
    transform: translateY(-50%);
  }
  @if $direction == "horizontal" {
    left: 50%;
    transform: translateX(-50%);
  }
}

@mixin absoluteFull() {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
}

@mixin absoluteTopLeft($top: 0, $left: 0) {
  position: absolute;
  left: $left;
  top: $top;
  bottom: unset;
  right: unset;
}
@mixin absoluteBottomLeft($bottom: 0, $left: 0) {
  position: absolute;
  left: $left;
  bottom: $bottom;
  top: unset;
  right: unset;
}

@mixin bg($color: red) {
  background: $color;
}

// mixin maxWidth($breakpoint)(@content)
@mixin minWidth($breakpoint) {
  @media screen and (min-width: $breakpoint) {
    @content;
  }
}
@mixin maxWidth($breakpoint) {
  @media screen and (max-width: $breakpoint) {
    @content;
  }
}

// Flexbox
@mixin flexbox(
  $align-items: stretch,
  $justify-content: flex-start,
  $direction: row,
  $wrap: nowrap
) {
  display: flex;
  align-items: $align-items;
  justify-content: $justify-content;
  flex-direction: $direction;
  flex-wrap: $wrap;
}

// Hide Scroll
@mixin hideScroll() {
  -ms-overflow-style: none;
  scrollbar-width: none;
  &::-webkit-scrollbar {
    display: none;
  }
}

// Text Clamp
@mixin textClamp($row: 1, $size: 100%) {
  display: -webkit-box;
  text-overflow: ellipsis;
  -webkit-line-clamp: $row;
  -webkit-box-orient: vertical;
  overflow: hidden;
  width: $size;
  max-width: $size;
  white-space: pre-wrap;
  word-break: break-all;
}

// custom scrollbar
@mixin customScrollbar(
  $scrollbarWidth: 3px,
  $scrollbarBorderRadius: 1px,
  $trackBorderRadius: 1px,
  $trackBackground: #ccc,
  $scrollBarColor: #ccc
) {
  &::-webkit-scrollbar {
    width: $scrollbarWidth;
  }
  &::-webkit-scrollbar-track {
    background: $trackBackground;
    border-radius: $trackBorderRadius;
  }
  &::-webkit-scrollbar-thumb {
    background: $scrollBarColor;
    border-radius: $scrollbarBorderRadius;
  }
}

// hover effect

@mixin cardHoverEffect() {
  box-shadow: 0px 2px 0px 0px transparent;
  -webkit-box-shadow: 0px 2px 0px 0px transparent;
  -moz-box-shadow: 0px 2px 0px 0px transparent;
  transition: all 200ms ease-in-out;
  transform: translate(0rem, 0rem);
  &:hover {
    transform: translate(-0.6rem, -0.6rem);
    box-shadow: 8px 10px 0px 2px $tertiary-color;
    -webkit-box-shadow: 8px 10px 0px 2px $tertiary-color;
    -moz-box-shadow: 8px 10px 0px 2px $tertiary-color;
    > * {
      opacity: 1;
      visibility: visible;
    }
  }
}
// linear gradient overlay
@mixin linearGradientOverlay(
  $opacity: 0.7,
  $direction: to bottom,
  $firstColor: $primary-color,
  $secondColor: $secondary-color
) {
  background: linear-gradient(
    $direction,
    rgba($firstColor, $opacity),
    rgba($secondColor, $opacity)
  );
}

// Touch Screen Slider

@mixin touchScreenSlider(
  $columnWidth: 30rem,
  $itemWidth: 88%,
  $scrollSnapAlign: start
) {
  justify-items: center;
  grid-template-columns: unset;
  grid-auto-flow: column;
  grid-auto-columns: $columnWidth;
  column-gap: unset;
  overflow-x: auto;
  scroll-snap-type: x mandatory;
  scroll-snap-stop: always;
  & > * {
    width: $itemWidth;
    scroll-snap-align: $scrollSnapAlign;
  }
}

// linearGradientWithBgImage
@mixin linearGradientWithBgImg(
  $imgUrl: "../../assets/img-device-bg.png",
  $direction: to bottom,
  $firstColor: #ccc,
  $secondColor: white,
  $opacity: 0.7
) {
  background: linear-gradient(
      $direction,
      rgba($firstColor, $opacity),
      rgba($secondColor, $opacity)
    ),
    url($imgUrl) no-repeat center / cover;
}
